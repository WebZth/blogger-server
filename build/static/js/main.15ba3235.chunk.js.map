{"version":3,"sources":["api/authServices.js","reducers/authReducer.js","reducers/notificationReducer.js","hooks/index.js","api/userServices.js","reducers/userReducer.js","core/NavMenu.jsx","components/ProtectedRoute.jsx","components/Notification.jsx","components/Footer.jsx","api/postServices.js","reducers/postReducer.js","components/Reactions.jsx","components/Comments.jsx","components/Blog.jsx","pages/public/Landing.jsx","pages/public/Login.jsx","pages/public/Signup.jsx","components/BlogPreview.jsx","components/BlogFeed.jsx","pages/protected/Home.jsx","pages/protected/Profile.jsx","core/MainRoutes.jsx","App.js","Store.js","index.js"],"names":["login","credentials","a","axios","post","response","data","authReducer","state","action","type","getAuth","dispatch","res","localStorage","setItem","JSON","stringify","error","Error","removeAuth","removeItem","notificationReducer","notify","msg","seconds","setTimeout","useField","useState","value","setValue","onChange","event","target","reset","baseUrl","create","user","read","id","token","get","headers","Authorization","update","put","remove","delete","userReducer","setSessionUser","cachedUser","parse","getItem","userInfo","_id","updateSessionUser","NavMenu","isAuth","useSelector","auth","history","useHistory","useDispatch","propToRemove","resetEmail","email","resetPassword","password","navLoginHandler","preventDefault","push","Navbar","sticky","bg","variant","expand","className","Brand","as","NavLink","to","Nav","Item","Form","inline","onSubmit","FormControl","placeholder","Button","Toggle","aria-controls","Collapse","Link","onClick","ProtectedRoute","Component","component","rest","render","location","pathname","from","Notification","notification","Container","fluid","Alert","Footer","href","rel","list","updateComments","console","log","postReducer","map","el","populateFeed","posts","addPost","returnedPost","updatePostReaction","updatePostComments","reactionEmoji","thumbsUp","hooray","heart","rocket","eyes","Reactions","reactions","updateReactions","name","postTitle","postAuthor","reactionButtons","Object","entries","emoji","e","Badge","NewComment","resetComment","comment","addCommentHandler","comments","content","date","Date","now","username","PostedComments","Comments","length","Blog","postId","useParams","useEffect","find","p","Jumbotron","Card","text","Body","Title","Subtitle","created_at","Text","postContent","updated_at","Landing","Login","useLocation","handleLogin","Header","Group","controlId","Label","srOnly","InputGroup","Prepend","required","Signup","resetUsername","resetName","handleSignup","Row","Col","BlogPreview","slice","BlogFeed","style","maxHeight","overflow","Home","sessionUser","resetTitle","title","resetContent","postHandler","xs","sm","md","ListGroup","ListGroupItem","Control","rows","Profile","resetAll","updateUserHandler","deleteUser","window","confirm","MainRoutes","exact","path","App","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","document","getElementById"],"mappings":"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","file":"static/js/main.15ba3235.chunk.js","sourcesContent":["import axios from \"axios\";\n// const baseUrl = \"http://localhost:3001/auth/signin\";\nconst baseUrl = \"/auth/signin\";\n\nexport const login = async (credentials) => {\n  try {\n    const response = await axios.post(baseUrl, credentials);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n","import { login } from \"../api/authServices\";\n\nconst authReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"SET_AUTH\":\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n\n// actions\nexport const getAuth = (credentials) => {\n  return async (dispatch) => {\n    try {\n      const res = await login(credentials);\n      if (res) {\n        dispatch({\n          type: \"SET_AUTH\",\n          data: true,\n        });\n        localStorage.setItem(\"cachedUser\", JSON.stringify(res));\n      }\n    } catch ({ error }) {\n      throw new Error(error);\n    }\n  };\n};\n\nexport const removeAuth = () => {\n  return (dispatch) => {\n    dispatch({\n      type: \"SET_AUTH\",\n      data: null,\n    });\n    localStorage.removeItem(\"cachedUser\");\n  };\n};\n\nexport const giveAuth = () => {\n  return (dispatch) => {\n    dispatch({\n      type: \"SET_AUTH\",\n      data: true,\n    });\n  };\n};\n","const notificationReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"SET_NOTIFICATION\":\n      return action.data;\n    case \"CLEAR_NOTIFICATION\":\n      return action.data;\n    default:\n      return state;\n  }\n};\nexport default notificationReducer;\n\n// action\nexport const notify = (msg, type, seconds) => {\n  return (dispatch) => {\n    dispatch({\n      type: \"SET_NOTIFICATION\",\n      data: { msg, type },\n    });\n    setTimeout(() => {\n      dispatch({\n        type: \"CLEAR_NOTIFICATION\",\n        data: null,\n      });\n    }, seconds * 1000);\n  };\n};\n","import { useState } from \"react\";\n\n// form hook\nexport const useField = (type) => {\n  const [value, setValue] = useState(\"\");\n\n  const onChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const reset = () => {\n    setValue(\"\");\n  };\n\n  return { type, value, onChange, reset };\n};\n","import axios from \"axios\";\n// const baseUrl = \"http://localhost:3001/api/users\";\nconst baseUrl = \"/api/users\";\n\nexport const create = async (user) => {\n  try {\n    const res = await axios.post(baseUrl, user);\n    return res.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\nexport const read = async (id, token) => {\n  try {\n    const res = await axios.get(`${baseUrl}/${id}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return res.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// update\nexport const update = async (id, token, data) => {\n  try {\n    const res = await axios.put(`${baseUrl}/${id}`, data, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return res.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// delete\nexport const remove = async (id, token) => {\n  try {\n    const res = await axios.delete(`${baseUrl}/${id}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return res.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n","import { read, update } from \"../api/userServices\";\n\nconst userReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"INIT_USER\":\n      return action.data;\n    case \"UPDATE_USER\":\n      return action.data;\n    default:\n      return state;\n  }\n};\nexport default userReducer;\n\n// actions\nexport const setSessionUser = () => {\n  return async (dispatch) => {\n    const cachedUser = JSON.parse(localStorage.getItem(\"cachedUser\"));\n    const { token, user: userInfo } = cachedUser;\n    try {\n      const user = await read(userInfo._id, token);\n      dispatch({\n        type: \"INIT_USER\",\n        data: user,\n      });\n    } catch ({ error }) {\n      throw new Error(error);\n    }\n  };\n};\n\nexport const updateSessionUser = (data) => {\n  return async (dispatch) => {\n    const cachedUser = JSON.parse(localStorage.getItem(\"cachedUser\"));\n    const {\n      token,\n      user: { _id: id },\n    } = cachedUser;\n    try {\n      const user = await update(id, token, data);\n      dispatch({\n        type: \"UPDATE_USER\",\n        data: user,\n      });\n    } catch ({ error }) {\n      throw new Error(error);\n    }\n  };\n};\n\nexport const endUserSession = () => {\n  return (dispatch) => {\n    dispatch({\n      type: \"INIT_USER\",\n      data: null,\n    });\n  };\n};\n","import { Navbar, Nav, Button, Form, FormControl } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { getAuth, removeAuth } from \"../reducers/authReducer\";\nimport { notify } from \"../reducers/notificationReducer\";\nimport { useField } from \"../hooks\";\nimport { endUserSession, setSessionUser } from \"../reducers/userReducer\";\n\nconst NavMenu = () => {\n  const isAuth = useSelector((state) => state.auth);\n  const history = useHistory();\n\n  // dispatch redux actions\n  const dispatch = useDispatch();\n\n  // form state\n  const propToRemove = \"reset\";\n  const { [propToRemove]: resetEmail, ...email } = useField(\"email\");\n  const { [propToRemove]: resetPassword, ...password } = useField(\"password\");\n  const resetAll = () => {\n    resetEmail();\n    resetPassword();\n  };\n\n  // nav login form\n  const navLoginHandler = async (event) => {\n    event.preventDefault();\n    const credentials = {\n      email: email.value,\n      password: password.value,\n    };\n    try {\n      await dispatch(getAuth(credentials));\n      dispatch(setSessionUser());\n      dispatch(notify(\"Welcome back\", \"success\", 5));\n      resetAll();\n      history.push(\"/home\");\n    } catch (error) {\n      dispatch(notify(\"\" + error, \"danger\", 5));\n    }\n  };\n\n  // logout handler for auth user\n  const handleLogout = () => {\n    dispatch(endUserSession());\n    dispatch(removeAuth());\n    dispatch(notify(\"Logout Successful, See Ya 👋\", \"warning\", 5));\n    history.push(\"/\");\n  };\n\n  return (\n    <Navbar\n      sticky=\"top\"\n      bg=\"light\"\n      variant=\"light\"\n      expand=\"lg\"\n      className=\"mb-3\"\n    >\n      <Navbar.Brand as={NavLink} to=\"/\">\n        <p className=\"mb-0 h1\">🅱️</p>\n      </Navbar.Brand>\n      {!isAuth && (\n        <Nav.Item>\n          <Form inline onSubmit={navLoginHandler}>\n            <FormControl\n              {...email}\n              placeholder=\"Enter Email\"\n              className=\"mr-sm-2\"\n            />\n            <FormControl\n              {...password}\n              placeholder=\"Password\"\n              className=\"mr-sm-2\"\n            />\n            <Button type=\"submit\" variant=\"outline-success\">\n              Log In\n            </Button>\n          </Form>\n        </Nav.Item>\n      )}\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        {!isAuth && (\n          <Nav className=\"ml-auto\">\n            <Nav.Item>\n              <Nav.Link as={NavLink} to=\"/signup\">\n                <Button variant=\"outline-primary\">Sign Up</Button>\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        )}\n        {isAuth && (\n          <Nav className=\"ml-auto\">\n            <Nav.Item>\n              <Button onClick={handleLogout} variant=\"outline-danger\">\n                Log Out\n              </Button>\n            </Nav.Item>\n          </Nav>\n        )}\n        {isAuth && (\n          <Nav className=\"ml-auto\">\n            <Nav.Item className=\"mr-2 p-1\">\n              <Button as={NavLink} to=\"/home\" variant=\"outline-primary\">\n                Home\n              </Button>\n            </Nav.Item>\n            <Nav.Item className=\"p-1\">\n              <Button as={NavLink} to=\"/profile\" variant=\"outline-primary\">\n                Profile\n              </Button>\n            </Nav.Item>\n          </Nav>\n        )}\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\nexport default NavMenu;\n","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  const isAuth = useSelector((state) => state.auth);\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        return isAuth === true ? (\n          <Component />\n        ) : (\n          <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n        );\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import { Container, Alert } from \"react-bootstrap\";\n\nconst Notification = ({ notification: { msg, type } }) => {\n  return (\n    <Container fluid className=\"mb-3\">\n      <Alert className=\"mb-0 h3\" variant={type}>\n        {msg}\n      </Alert>\n    </Container>\n  );\n};\nexport default Notification;\n","import { Container } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <Container>\n      <hr />\n      <p className=\"text-muted text-center\">\n        Did you like my work 🎉?{\" \"}\n        <a\n          href=\"https://github.com/webzth/webzth\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          check out my github\n        </a>\n      </p>\n    </Container>\n  );\n};\nexport default Footer;\n","import axios from \"axios\";\n// const baseUrl = \"http://localhost:3001/api/posts\";\nconst baseUrl = \"/api/posts\";\n\n// list\nexport const list = async (token) => {\n  try {\n    const res = await axios.get(baseUrl, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return res.data;\n  } catch (error) {\n    return error.response.data;\n  }\n};\n\n// create\nexport const create = async (post, token) => {\n  try {\n    const res = await axios.post(baseUrl, post, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return res.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// update\nexport const update = async (id, post, token) => {\n  try {\n    const res = await axios.put(`${baseUrl}/${id}/reactions`, post, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return res.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// update comments\nexport const updateComments = async (id, post, token) => {\n  try {\n    const res = await axios.put(`${baseUrl}/${id}/comments`, post, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    console.log(res);\n    return res.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n","import { create, list, update, updateComments } from \"../api/postServices\";\n\nconst postReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"INIT_POSTS\":\n      return action.data;\n    case \"ADD_POST\":\n      return [...state, action.data];\n    case \"UPDATE_POST\":\n      return state.map((el) => (el.id === action.data.id ? action.data : el));\n    default:\n      return state;\n  }\n};\nexport default postReducer;\n\n// actions\nexport const populateFeed = () => {\n  return async (dispatch) => {\n    const cachedUser = JSON.parse(localStorage.getItem(\"cachedUser\"));\n    const { token } = cachedUser;\n    try {\n      const posts = await list(token);\n      dispatch({\n        type: \"INIT_POSTS\",\n        data: posts,\n      });\n    } catch ({ error }) {\n      throw new Error(error);\n    }\n  };\n};\n\nexport const addPost = (post) => {\n  return async (dispatch) => {\n    const cachedUser = JSON.parse(localStorage.getItem(\"cachedUser\"));\n    const { token } = cachedUser;\n    try {\n      const { returnedPost } = await create(post, token);\n      dispatch({\n        type: \"ADD_POST\",\n        data: returnedPost,\n      });\n    } catch ({ error }) {\n      throw new Error(error);\n    }\n  };\n};\n\nexport const updatePostReaction = (data, id) => {\n  return async (dispatch) => {\n    const cachedUser = JSON.parse(localStorage.getItem(\"cachedUser\"));\n    const { token } = cachedUser;\n    try {\n      const post = await update(id, data, token);\n      dispatch({\n        type: \"UPDATE_POST\",\n        data: post,\n      });\n    } catch ({ error }) {\n      throw new Error(error);\n    }\n  };\n};\n\nexport const updatePostComments = (data, id) => {\n  return async (dispatch) => {\n    const cachedUser = JSON.parse(localStorage.getItem(\"cachedUser\"));\n    const { token } = cachedUser;\n    try {\n      const post = await updateComments(id, data, token);\n      dispatch({\n        type: \"UPDATE_POST\",\n        data: post,\n      });\n    } catch ({ error }) {\n      throw new Error(error);\n    }\n  };\n};\n","import { Badge, Button } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { notify } from \"../reducers/notificationReducer\";\nimport { updatePostReaction } from \"../reducers/postReducer\";\n\nconst reactionEmoji = {\n  thumbsUp: \"👍\",\n  hooray: \"🙌\",\n  heart: \"❤️\",\n  rocket: \"🚀\",\n  eyes: \"👀\",\n};\n\nconst Reactions = ({ reactions, post }) => {\n  const dispatch = useDispatch();\n\n  const updateReactions = async ({ id }, name) => {\n    const data = { ...reactions, [name]: reactions[name] + 1 };\n    try {\n      await dispatch(updatePostReaction({ reactions: data }, id));\n      dispatch(\n        notify(\n          `Liked post \"${post.postTitle}\" by ${post.postAuthor || \"anonymous\"}`,\n          \"success\",\n          5\n        )\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const reactionButtons = Object.entries(reactionEmoji).map(([name, emoji]) => {\n    return (\n      <Button\n        variant=\"dark\"\n        key={name}\n        className=\"mt-2\"\n        onClick={(e) => updateReactions(post, name)}\n      >\n        {emoji}\n        <Badge variant=\"success\">{reactions[name]}</Badge>\n      </Button>\n    );\n  });\n  return <div>{reactionButtons}</div>;\n};\nexport default Reactions;\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useField } from \"./../hooks/index\";\nimport { FormControl } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { updatePostComments } from \"../reducers/postReducer\";\nimport { notify } from \"./../reducers/notificationReducer\";\n\nconst NewComment = ({ post }) => {\n  const dispatch = useDispatch();\n\n  const propToRemove = \"reset\";\n  const { [propToRemove]: resetComment, ...comment } = useField(\"text\");\n\n  const addCommentHandler = async (e) => {\n    e.preventDefault();\n    const { id } = post;\n    const data = [\n      ...post.comments,\n      { content: comment.value, date: Date.now() },\n    ];\n    try {\n      await dispatch(updatePostComments({ comments: data }, id));\n      dispatch(\n        notify(\n          `Commented on ${post.user.username || \"👻\"}'s blog 🙌`,\n          \"success\",\n          5\n        )\n      );\n      resetComment();\n    } catch (error) {\n      dispatch(notify(\"\" + error, \"danger\", 5));\n      resetComment();\n    }\n  };\n\n  return (\n    <Form inline onSubmit={addCommentHandler}>\n      <FormControl\n        {...comment}\n        placeholder=\"drop a comment...\"\n        className=\"mr-sm-2\"\n      />\n      <Button type=\"submit\" variant=\"outline-success\">\n        Comment\n      </Button>\n    </Form>\n  );\n};\n\nconst PostedComments = ({ post }) => {\n  return (\n    <>\n      <ul>\n        {post.comments.map((comment) => (\n          <li key={comment.date}>{comment.content}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nconst Comments = ({ post }) => {\n  return (\n    <>\n      <p className=\"text-primary\">Leave a comment</p>\n      {(post.comments.length && <PostedComments post={post} />) || (\n        <p className=\"text-muted\">Be the first to comment on this post 😎</p>\n      )}\n      <NewComment post={post} />\n    </>\n  );\n};\n\nexport default Comments;\n","import { Button, Card, Container, Jumbotron } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Reactions from \"./Reactions\";\nimport Comments from \"./Comments\";\nimport { populateFeed } from \"../reducers/postReducer\";\nimport { useEffect } from \"react\";\n\nconst Blog = () => {\n  const dispatch = useDispatch();\n  const { id: postId } = useParams();\n\n  const posts = useSelector((state) => state.posts);\n\n  useEffect(() => {\n    dispatch(populateFeed());\n  }, [dispatch]);\n\n  if (posts.length) {\n    const post = posts.find((p) => p.id === postId);\n    return (\n      <Container>\n        <Button className=\"mb-3\" variant=\"outline-primary\" as={Link} to=\"/home\">\n          ⬅️ Back\n        </Button>\n        <Jumbotron className=\"p-1\">\n          <Card bg=\"dark\" text=\"light\">\n            <Card.Body>\n              <Card.Title>{post.postTitle}</Card.Title>\n              <Card.Subtitle className=\"mb-3 text-muted\">\n                ~ posted by {post.postAuthor || \"👻\"} on {post.created_at}\n              </Card.Subtitle>\n              <Card.Text>{post.postContent}</Card.Text>\n              <Reactions reactions={post.reactions} post={post} />\n              <Card.Text className=\"text-muted\">\n                updated last at {post.updated_at || null}\n              </Card.Text>\n            </Card.Body>\n            <Card.Footer>\n              <Comments post={post} />\n            </Card.Footer>\n          </Card>\n        </Jumbotron>\n      </Container>\n    );\n  } else {\n    return null;\n  }\n};\nexport default Blog;\n","import { useEffect } from \"react\";\nimport { giveAuth } from \"../../reducers/authReducer\";\nimport { notify } from \"../../reducers/notificationReducer\";\nimport { Container, Jumbotron, Button } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSessionUser } from \"../../reducers/userReducer\";\n\nconst Landing = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector((state) => state.auth);\n\n  // check for cachedUser\n  useEffect(() => {\n    if (localStorage.getItem(\"cachedUser\")) {\n      const { user } = JSON.parse(localStorage.getItem(\"cachedUser\"));\n      // give auth\n      dispatch(giveAuth());\n      dispatch(setSessionUser());\n      dispatch(notify(`Welcome back ${user.name}`, \"success\", 5));\n    }\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Jumbotron>\n        <h1>Welcome to 🅱️logger</h1>\n        <hr />\n        <p>\n          This is a fullstack blog application, written in modern javascript\n          using modern work-flows like redux, redux-thunk and react-bootstrap.\n          This React front-end is communicating with a back-end node application\n          written in Express. Check out my source-code{\" \"}\n          <a\n            href=\"https://github.com/WebZth/BLOGAPP-MERN\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            here\n          </a>\n          .\n        </p>\n        <br />\n        {!isAuth && (\n          <>\n            <p>\n              <Button as={NavLink} to=\"/signup\" variant=\"outline-primary\">\n                Sign Up\n              </Button>\n            </p>\n            <p className=\"text-muted\">\n              Already have an account? <NavLink to=\"/login\">Log In</NavLink>\n            </p>\n          </>\n        )}\n        {isAuth && (\n          <>\n            <p>\n              <Button as={NavLink} to=\"/home\" variant=\"success\">\n                Home\n              </Button>\n            </p>\n            <p className=\"text-muted\">You are already signed in</p>\n          </>\n        )}\n      </Jumbotron>\n    </Container>\n  );\n};\n\nexport default Landing;\n","import { useEffect } from \"react\";\nimport {\n  Container,\n  Jumbotron,\n  Card,\n  Form,\n  InputGroup,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\nimport { NavLink, useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { getAuth, giveAuth } from \"../../reducers/authReducer\";\nimport { useField } from \"./../../hooks/index\";\nimport { notify } from \"../../reducers/notificationReducer\";\nimport { setSessionUser } from \"../../reducers/userReducer\";\n\nconst Login = () => {\n  // dispatch redux action for auth\n  const dispatch = useDispatch();\n  // react-router redirecting\n  const { state } = useLocation();\n  const history = useHistory();\n\n  // check for cachedUser\n  useEffect(() => {\n    if (localStorage.getItem(\"cachedUser\")) {\n      const { user } = JSON.parse(localStorage.getItem(\"cachedUser\"));\n      // give auth\n      dispatch(giveAuth());\n      dispatch(notify(`Welcome back ${user.name}`, \"success\", 5));\n      dispatch(setSessionUser());\n      history.push(`${state?.from.pathname || \"/home\"}`);\n    }\n  }, [dispatch, history, state?.from.pathname]);\n\n  // form state\n  const propToRemove = \"reset\";\n  const { [propToRemove]: resetEmail, ...email } = useField(\"email\");\n  const { [propToRemove]: resetPassword, ...password } = useField(\"password\");\n\n  const resetAll = () => {\n    resetEmail();\n    resetPassword();\n  };\n\n  // form login\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    const credentials = {\n      email: email.value,\n      password: password.value,\n    };\n    try {\n      // attempt login\n      await dispatch(getAuth(credentials));\n      resetAll();\n      dispatch(setSessionUser());\n      dispatch(notify(\"Welcome back\", \"success\", 5));\n      history.push(`${state?.from.pathname || \"/home\"}`);\n    } catch (error) {\n      dispatch(notify(\"\" + error, \"danger\", 5));\n    }\n  };\n\n  return (\n    <Container>\n      <Jumbotron>\n        <Card>\n          <Card.Header className=\"mb-0 h2\">Login to your account</Card.Header>\n          <Card.Body>\n            <Form onSubmit={handleLogin}>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label srOnly>Email</Form.Label>\n                <InputGroup className=\"mb-2\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>Email</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl {...email} placeholder=\"Email\" required />\n                </InputGroup>\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label srOnly>Password</Form.Label>\n                <InputGroup className=\"mb-2\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>Password</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl {...password} placeholder=\"Password\" required />\n                </InputGroup>\n                <Form.Text className=\"text-muted\">\n                  Please include special characters, numbers and capital\n                  letters.\n                </Form.Text>\n              </Form.Group>\n\n              <Button variant=\"success\" type=\"submit\">\n                Log In\n              </Button>\n              <Form.Text className=\"text-muted\">\n                Don't have an account? <NavLink to=\"/signup\">Sign Up</NavLink>\n              </Form.Text>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Jumbotron>\n    </Container>\n  );\n};\nexport default Login;\n","import {\n  Container,\n  Jumbotron,\n  Card,\n  Form,\n  FormControl,\n  Button,\n  InputGroup,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { create } from \"../../api/userServices\";\nimport { useField } from \"./../../hooks/index\";\nimport { notify } from \"../../reducers/notificationReducer\";\nimport { useEffect } from \"react\";\nimport { giveAuth } from \"../../reducers/authReducer\";\nimport { setSessionUser } from \"../../reducers/userReducer\";\n\nconst Signup = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // check for cachedUser\n  useEffect(() => {\n    if (localStorage.getItem(\"cachedUser\")) {\n      const { user } = JSON.parse(localStorage.getItem(\"cachedUser\"));\n      // give auth\n      dispatch(giveAuth());\n      dispatch(notify(`Welcome back ${user.name}`, \"success\", 5));\n      dispatch(setSessionUser());\n      history.push(\"/\");\n    }\n  }, [dispatch, history]);\n\n  const propToRemove = \"reset\";\n  const { [propToRemove]: resetEmail, ...email } = useField(\"email\");\n  const { [propToRemove]: resetPassword, ...password } = useField(\"password\");\n  const { [propToRemove]: resetUsername, ...username } = useField(\"text\");\n  const { [propToRemove]: resetName, ...name } = useField(\"text\");\n\n  const resetAll = () => {\n    resetEmail();\n    resetPassword();\n    resetName();\n    resetUsername();\n  };\n\n  // form signup\n  const handleSignup = async (event) => {\n    event.preventDefault();\n    const user = {\n      email: email.value,\n      password: password.value,\n      username: username.value,\n      name: name.value,\n    };\n    try {\n      await create(user);\n      resetAll();\n      dispatch(notify(\"Sign Up successful, login to continue\", \"success\", 5));\n      history.push(\"/login\");\n    } catch ({ error }) {\n      dispatch(notify(\"\" + error, \"danger\", 5));\n    }\n  };\n\n  return (\n    <Container>\n      <Jumbotron>\n        <Card>\n          <Card.Header className=\"mb-0 h2\">Create an account</Card.Header>\n          <Card.Body>\n            <Form onSubmit={handleSignup}>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label srOnly>Email</Form.Label>\n                <InputGroup className=\"mb-2\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>Email</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl {...email} placeholder=\"Email\" required />\n                </InputGroup>\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label srOnly>Password</Form.Label>\n                <InputGroup className=\"mb-2\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>Password</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl {...password} placeholder=\"Password\" required />\n                </InputGroup>\n                <Form.Text className=\"text-muted\">\n                  Please include special characters, numbers and capital\n                  letters.\n                </Form.Text>\n              </Form.Group>\n\n              <Row>\n                <Col>\n                  <Form.Group controlId=\"formBasicName\">\n                    <Form.Label srOnly>Name</Form.Label>\n                    <InputGroup className=\"mb-2\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>Name</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <FormControl {...name} placeholder=\"Full Name\" required />\n                    </InputGroup>\n                    <Form.Text className=\"text-muted\">\n                      Please provide your full name.\n                    </Form.Text>\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group controlId=\"formBasicUsername\">\n                    <Form.Label srOnly>Username</Form.Label>\n                    <InputGroup className=\"mb-2\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>@</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <FormControl\n                        {...username}\n                        placeholder=\"Username\"\n                        required\n                      />\n                    </InputGroup>\n                    <Form.Text className=\"text-muted\">\n                      Please provide a username.\n                    </Form.Text>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n              <Button variant=\"primary\" type=\"submit\">\n                Sign Up\n              </Button>\n              <Form.Text className=\"text-muted\">\n                Already have an account? <NavLink to=\"/login\">Log In</NavLink>\n              </Form.Text>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Jumbotron>\n    </Container>\n  );\n};\nexport default Signup;\n","import { Button, Card, Jumbotron } from \"react-bootstrap\";\nimport Reactions from \"./Reactions\";\nimport { Link } from \"react-router-dom\";\n\nconst BlogPreview = ({ post }) => {\n  const {\n    postTitle,\n    postAuthor,\n    created_at,\n    postContent,\n    reactions,\n    comments,\n    id,\n  } = post;\n  return (\n    <Jumbotron className=\"p-0 mb-2\">\n      <Card bg=\"dark\" text=\"light\">\n        <Card.Body>\n          <Card.Title>{postTitle}</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            ~ {postAuthor || \"👻\"} on {created_at}\n          </Card.Subtitle>\n          <Card.Text>\n            {postContent.slice(0, 15)}...{\" \"}\n            <Button variant=\"outline-info\" as={Link} to={`/posts/${id}`}>\n              Read More\n            </Button>\n          </Card.Text>\n          <Card.Text className=\"text-muted\">\n            {comments.length} comments\n          </Card.Text>\n          <Reactions reactions={reactions} post={post} />\n        </Card.Body>\n      </Card>\n    </Jumbotron>\n  );\n};\nexport default BlogPreview;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { populateFeed } from \"../reducers/postReducer\";\nimport { Jumbotron } from \"react-bootstrap\";\nimport BlogPreview from \"./BlogPreview\";\n\nconst BlogFeed = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts);\n\n  useEffect(() => {\n    dispatch(populateFeed());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h3 className=\"mb-3\">Blog Feed</h3>\n      <Jumbotron\n        className=\"p-2\"\n        style={{ maxHeight: \"100vh\", overflow: \"auto\" }}\n      >\n        {posts.length && posts.map((p) => <BlogPreview key={p.id} post={p} />)}\n      </Jumbotron>\n    </>\n  );\n};\nexport default BlogFeed;\n","import {\n  Container,\n  Row,\n  Col,\n  Card,\n  ListGroup,\n  ListGroupItem,\n  Jumbotron,\n  Button,\n  Form,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useField } from \"./../../hooks/index\";\nimport BlogFeed from \"../../components/BlogFeed\";\nimport { addPost } from \"../../reducers/postReducer\";\nimport { notify } from \"./../../reducers/notificationReducer\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.user);\n\n  const propToRemove = \"reset\";\n  const { [propToRemove]: resetTitle, ...title } = useField(\"text\");\n  const { [propToRemove]: resetContent, ...content } = useField(\"text\");\n\n  const resetAll = () => {\n    resetTitle();\n    resetContent();\n  };\n\n  const postHandler = async (event) => {\n    event.preventDefault();\n    const post = {\n      postTitle: title.value,\n      postContent: content.value,\n      postAuthor: sessionUser.username,\n    };\n    try {\n      await dispatch(addPost(post));\n      sessionUser.posts.length++;\n      resetAll();\n    } catch (error) {\n      dispatch(notify(\"\" + error, \"danger\", 5));\n    }\n  };\n\n  return (\n    <Container>\n      {sessionUser && (\n        <Row>\n          <Col xs={12} sm={12} md={4} className=\"xs-sm mb-3\">\n            <Card>\n              <Card.Header>🔐 My Profile</Card.Header>\n              <Card.Body>\n                <Card.Title>{sessionUser.name}</Card.Title>\n                <Card.Text className=\"text-muted\">\n                  {sessionUser.name} joined 🅱️logger on {sessionUser.created_at}\n                </Card.Text>\n              </Card.Body>\n              <ListGroup className=\"list-group-flush\">\n                <ListGroupItem>\n                  🎉 {sessionUser.posts.length} posts shared\n                </ListGroupItem>\n                <ListGroupItem>📬 {sessionUser.email}</ListGroupItem>\n                <ListGroupItem>\n                  🗣️ {sessionUser.updated_at || \"no updates\"}\n                </ListGroupItem>\n              </ListGroup>\n              <Card.Body>\n                <Card.Link as={NavLink} to=\"/profile\">\n                  ⚙️ Settings\n                </Card.Link>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={8}>\n            <Jumbotron className=\"p-2\">\n              <Card>\n                <Card.Header className=\"mb-0 h4\">Create Blog</Card.Header>\n                <Card.Body>\n                  <Form onSubmit={postHandler}>\n                    <Form.Group controlId=\"formBasicTitle\">\n                      <Form.Label srOnly>Title</Form.Label>\n                      <InputGroup className=\"mb-2\">\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>Title</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl\n                          {...title}\n                          placeholder=\"Blog Title\"\n                          required\n                        />\n                      </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group\n                      className=\"mb-3\"\n                      controlId=\"exampleForm.ControlTextarea1\"\n                    >\n                      <Form.Control\n                        {...content}\n                        placeholder=\"What's on your mind...\"\n                        as=\"textarea\"\n                        rows={2}\n                      />\n                      <Form.Text className=\"text-muted\">\n                        Please refrain from profanity and keep other people's\n                        feelings in mind when sharing posts.\n                      </Form.Text>\n                    </Form.Group>\n\n                    <Button variant=\"success\" type=\"submit\">\n                      🅱️log\n                    </Button>\n                  </Form>\n                </Card.Body>\n              </Card>\n            </Jumbotron>\n            <hr />\n            <BlogFeed />\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n};\nexport default Home;\n","import {\n  Container,\n  Form,\n  Card,\n  Jumbotron,\n  InputGroup,\n  FormControl,\n  Row,\n  Col,\n  Button,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { remove } from \"../../api/userServices\";\nimport BlogPreview from \"../../components/BlogPreview\";\nimport { useField } from \"../../hooks/index\";\nimport { removeAuth } from \"../../reducers/authReducer\";\nimport { notify } from \"../../reducers/notificationReducer\";\nimport { endUserSession, updateSessionUser } from \"../../reducers/userReducer\";\n\nconst Profile = () => {\n  let sessionUser = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const propToRemove = \"reset\";\n  const { [propToRemove]: resetPassword, ...password } = useField(\"password\");\n  const { [propToRemove]: resetEmail, ...email } = useField(\"email\");\n  const { [propToRemove]: resetName, ...name } = useField(\"text\");\n  const { [propToRemove]: resetUsername, ...username } = useField(\"text\");\n\n  const resetAll = () => {\n    resetEmail();\n    resetPassword();\n    resetName();\n    resetUsername();\n  };\n  const updateUserHandler = async (event) => {\n    event.preventDefault();\n\n    //conditionally add object properties\n    const data = {\n      ...(password.value && { password: password.value }),\n      ...(email.value && { email: email.value }),\n      ...(name.value && { name: name.value }),\n      ...(username.value && { username: username.value }),\n    };\n    try {\n      if (!(data.password || data.email)) {\n        await dispatch(updateSessionUser(data));\n        resetAll();\n      } else {\n        await dispatch(updateSessionUser(data));\n        resetAll();\n        dispatch(endUserSession());\n        dispatch(removeAuth());\n        dispatch(\n          notify(\"Please Login again, password/email changed \", \"primary\", 5)\n        );\n        history.push(\"/\");\n      }\n    } catch ({ error }) {\n      dispatch(notify(\"\" + error, \"danger\", 5));\n    }\n  };\n\n  // delete user profile\n  const deleteUser = async () => {\n    const cachedUser = JSON.parse(localStorage.getItem(\"cachedUser\"));\n    const {\n      token,\n      user: { _id: id },\n    } = cachedUser;\n    try {\n      if (window.confirm(\"Delete your profile?\")) {\n        await remove(id, token);\n        dispatch(endUserSession());\n        dispatch(removeAuth());\n        dispatch(notify(\"Profile Deleted successfully\", \"warning\", 5));\n        history.push(\"/\");\n      }\n    } catch ({ error }) {\n      dispatch(notify(\"\" + error, \"danger\", 5));\n    }\n  };\n\n  return (\n    <Container>\n      {sessionUser && (\n        <>\n          <Jumbotron className=\"p-2\">\n            <Card text=\"dark\">\n              <Card.Header className=\"mb-0 h2\">\n                Update Profile Information\n              </Card.Header>\n              <Card.Body>\n                <Form onSubmit={updateUserHandler}>\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label srOnly>Email</Form.Label>\n                    <InputGroup className=\"mb-2\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>Email</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <FormControl {...email} placeholder=\"Email\" />\n                    </InputGroup>\n                    <Form.Text className=\"text-muted\">\n                      Please provide a valid email.\n                    </Form.Text>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label srOnly>Password</Form.Label>\n                    <InputGroup className=\"mb-2\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>Password</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <FormControl {...password} placeholder=\"Password\" />\n                    </InputGroup>\n                    <Form.Text className=\"text-muted\">\n                      Please include special characters, numbers and capital\n                      letters.\n                    </Form.Text>\n                  </Form.Group>\n\n                  <Row>\n                    <Col>\n                      <Form.Group controlId=\"formBasicName\">\n                        <Form.Label srOnly>Name</Form.Label>\n                        <InputGroup className=\"mb-2\">\n                          <InputGroup.Prepend>\n                            <InputGroup.Text>Name</InputGroup.Text>\n                          </InputGroup.Prepend>\n                          <FormControl {...name} placeholder=\"Full Name\" />\n                        </InputGroup>\n                        <Form.Text className=\"text-muted\">\n                          Please provide your full name.\n                        </Form.Text>\n                      </Form.Group>\n                    </Col>\n                    <Col>\n                      <Form.Group controlId=\"formBasicUsername\">\n                        <Form.Label srOnly>Username</Form.Label>\n                        <InputGroup className=\"mb-2\">\n                          <InputGroup.Prepend>\n                            <InputGroup.Text>@</InputGroup.Text>\n                          </InputGroup.Prepend>\n                          <FormControl {...username} placeholder=\"Username\" />\n                        </InputGroup>\n                        <Form.Text className=\"text-muted\">\n                          Please provide a username.\n                        </Form.Text>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n\n                  <Button variant=\"success\" type=\"submit\">\n                    ⚙️ Update\n                  </Button>\n                  <Form.Text className=\"text-muted\">\n                    Cancel Update <NavLink to=\"/home\">Go Back</NavLink>\n                  </Form.Text>\n                </Form>\n              </Card.Body>\n              <Card.Footer>\n                <Button variant=\"outline-danger\" onClick={deleteUser}>\n                  Delete Profile\n                </Button>\n              </Card.Footer>\n            </Card>\n          </Jumbotron>\n          <hr />\n          <h3>My Posts</h3>\n          <Jumbotron\n            className=\"p-2\"\n            style={{ maxHeight: \"80vh\", overflow: \"auto\" }}\n          >\n            {(sessionUser.posts.length &&\n              sessionUser.posts.map((p) => (\n                <BlogPreview key={p.id} post={p} />\n              ))) || <p>No posts yet! 👻</p>}\n          </Jumbotron>\n        </>\n      )}\n    </Container>\n  );\n};\nexport default Profile;\n","import { useSelector } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\nimport NavMenu from \"./NavMenu\";\nimport ProtectedRoute from \"../components/ProtectedRoute\";\nimport Notification from \"../components/Notification\";\nimport Footer from \"./../components/Footer\";\nimport Blog from \"../components/Blog\";\n// public\nimport Landing from \"../pages/public/Landing\";\nimport Login from \"../pages/public/Login\";\nimport Signup from \"../pages/public/Signup\";\n// protected\nimport Home from \"../pages/protected/Home\";\nimport Profile from \"../pages/protected/Profile\";\n\nconst MainRoutes = () => {\n  // check notification state and display\n  const notification = useSelector((state) => state.notification);\n\n  return (\n    <>\n      <NavMenu />\n      {notification && <Notification notification={notification} />}\n      <Switch>\n        <Route exact path=\"/\" component={Landing} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n        <ProtectedRoute path=\"/home\" component={Home} />\n        <ProtectedRoute path=\"/profile\" component={Profile} />\n        <ProtectedRoute path=\"/posts/:id\" component={Blog} />\n      </Switch>\n      <Footer />\n    </>\n  );\n};\n\nexport default MainRoutes;\n","import MainRoutes from \"./core/MainRoutes\";\n\nfunction App() {\n  return (\n    <>\n      <MainRoutes />\n    </>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n// reducers\nimport authReducer from \"./reducers/authReducer\";\nimport notificationReducer from \"./reducers/notificationReducer\";\nimport userReducer from \"./reducers/userReducer\";\nimport postReducer from \"./reducers/postReducer\";\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  user: userReducer,\n  posts: postReducer,\n  notification: notificationReducer,\n});\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import { render } from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store\";\n\nrender(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}